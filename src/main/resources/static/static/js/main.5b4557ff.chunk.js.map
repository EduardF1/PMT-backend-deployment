{"version":3,"sources":["actions/types.ts","actions/projectActions.ts","components/project/ProjectItem.tsx","components/project/ProjectButton.tsx","components/Dashboard.tsx","security-utils/jwt-token.ts","actions/securityActions.ts","components/Header.tsx","components/project/AddProject.tsx","reducers/backlogReducer.ts","reducers/errorReducer.ts","reducers/projectReducer.ts","reducers/securityReducer.ts","reducers/index.ts","store.ts","components/project/UpdateProject.tsx","components/project-board/project-tasks/ProjectTask.tsx","actions/backlogActions.ts","components/project-board/Backlog.tsx","components/project-board/ProjectBoard.tsx","components/project-board/project-tasks/AddProjectTask.tsx","components/project-board/project-tasks/UpdateProjectTask.tsx","components/Landing.tsx","components/user-management/Register.tsx","components/user-management/Login.tsx","security-utils/SecuredRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","React","Component","connect","window","confirm","delete","ProjectButton","Fragment","Dashboard","getProjects","projects","map","state","get","res","data","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","nextContext","setState","event","target","name","value","preventDefault","newProject","classNames","placeholder","initialState","projectTasks","projectTask","isActionPayloadSet","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","reactReduxDevTools","composeWithDevTools","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlogId","projectTaskId","deleteProjectTask","priorityString","priorityClass","prioritySpaces","repeat","priority","slice","summary","acceptanceCriteria","Backlog","toDoItems","inProgressItems","doneItems","tasks","task","status","ProjectBoard","getBacklog","boardContent","length","projectNotFound","role","boardErrorHandler","response","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","e","newUser","createNewUser","Login","loginRequest","login","setItem","decodedToken","jwt_decode","component","otherProps","render","jwtToken","jwt_token","decoded_jwt_token","currentTime","Date","now","exp","App","exact","path","LandingPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"sSACaA,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBAGjBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBAEtBC,EAAmB,mBCRnBC,EAAgB,SAACC,EAAcC,GAAf,8CAAgC,WAAOC,GAAP,SAAAC,EAAA,+EAEnCC,IAAMC,KAAK,eAAgBL,GAFQ,cAGrDC,EAAQK,KAAK,cAHwC,gDAKrDJ,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAPwC,yDAAhC,uD,OCGvBC,E,4MAGFC,cAAgB,SAACC,GACb,EAAKC,MAAMC,cAAcF,I,4CAG7B,WAAU,IACCX,EAAWc,KAAKF,MAAhBZ,QACP,OACI,qBAAKe,UAAU,YAAf,SACI,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,sBAAMA,UAAU,UAAhB,SAA2Bf,EAAQgB,sBAEvC,sBAAKD,UAAU,0BAAf,UACI,6BAAKf,EAAQiB,cACb,4BAAIjB,EAAQkB,iBAEhB,qBAAKH,UAAU,6BAAf,SACI,qBAAIA,UAAU,aAAd,UACI,cAAC,IAAD,CAAMI,GAAE,wBAAmBnB,EAAQgB,mBAAqBD,UAAU,uBAAlE,SACI,oBAAIA,UAAU,yBAAd,SACI,mBAAGA,UAAU,4BAAb,iCAGR,cAAC,IAAD,CAAMI,GAAE,yBAAoBnB,EAAQgB,mBAAqBD,UAAU,uBAAnE,SACI,oBAAIA,UAAU,0BAAd,SACI,mBAAGA,UAAU,kBAAb,sCAGR,oBAAIA,UAAU,0BAA0BK,QAASN,KAAKJ,cAAcW,KAAKP,KAAMd,EAAQgB,mBAAvF,SACI,mBAAGD,UAAU,0BAAb,+C,GAjCVO,IAAMC,WAgDjBC,cAAQ,KAAM,CAACX,cDlBD,SAACF,GAAD,8CAAgB,WAAOT,GAAP,SAAAC,EAAA,0DACrCsB,OAAOC,QAAQ,4EADsB,gCAE/BtB,IAAMuB,OAAN,uBAA6BhB,IAFE,OAGrCT,EAAS,CACLK,KAAMb,EACNc,QAASG,IALwB,2CAAhB,wDCkBda,CAA+Bf,GCzC/BmB,EAVO,WAClB,OACI,cAAC,IAAMC,SAAP,UACI,cAAC,IAAD,CAAMV,GAAG,cAAcJ,UAAU,iCAAjC,iCCCNe,E,uKAGF,WACIhB,KAAKF,MAAMmB,gB,oBAIf,WAAU,IACCC,EAAYlB,KAAKF,MAAMZ,QAAvBgC,SAEP,OACI,qBAAKjB,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,sBACA,uBACA,cAAC,EAAD,IACA,uBACA,uBAEIiB,EAASC,KAAI,SAACjC,GAAD,OACT,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQW,oB,GAvBtCW,IAAMC,WA0CfC,eAHS,SAACU,GAAD,MAAiB,CACrClC,QAASkC,EAAMlC,WAEqB,CAAC+B,YHjCd,yDAAM,WAAO7B,GAAP,eAAAC,EAAA,sEACXC,IAAM+B,IAAI,oBADC,OACvBC,EADuB,OAE7BlC,EAAS,CACLK,KAAMf,EACNgB,QAAS4B,EAAIC,OAJY,2CAAN,wDGiCZb,CAAwCM,GCvCxCQ,EARK,SAACC,GACdA,EACCnC,IAAMoC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CnC,IAAMoC,SAASC,QAAQC,OAAvB,e,QCmCFC,EAAS,yDAAM,WAAOzC,GAAP,SAAAC,EAAA,sDACxByC,aAAaC,WAAW,aACxBP,GAAY,GACZpC,EAAS,CACLK,KAAMT,EACNU,QAAS,KALW,2CAAN,uDCnChBsC,E,4JAGF,WACIhC,KAAKF,MAAM+B,SACXlB,OAAOsB,SAASC,KAAO,M,oBAG3B,WAAU,IA+CFC,EA/CC,EACsBnC,KAAKF,MAAMsC,SAA/BC,EADF,EACEA,WAAYC,EADd,EACcA,KACbC,EACF,sBAAKtC,UAAU,2BAA2BJ,GAAG,aAA7C,UACI,oBAAII,UAAU,qBAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,2BAKR,qBAAKJ,UAAU,gBAAf,SACI,qBAAIA,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WACVI,GAAG,aADT,UACsB,mBAAGJ,UAAU,uBADnC,WAC8DqC,EAAKE,eAGvE,oBAAIvC,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WACVI,GAAG,UAAUC,QAASN,KAAK6B,OAAOtB,KAAKP,MAD7C,8BASdyC,EACF,qBAAKxC,UAAU,2BAA2BJ,GAAG,aAA7C,SACI,qBAAKI,UAAU,gBAAf,SACI,qBAAIA,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WACVI,GAAG,YADT,uBAIJ,oBAAIJ,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WACVI,GAAG,SADT,4BAiBpB,OALI8B,EADAE,GAAcC,EACAC,EAEAE,EAId,qBAAKxC,UAAU,sDAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeI,GAAG,IAAlC,8CAGA,wBAAQJ,UAAU,iBAAiBR,KAAK,SAASiD,cAAY,WAAWC,cAAY,cAApF,SACI,sBAAM1C,UAAU,0BAEnBkC,W,GAxEA3B,IAAMC,WAsFZC,eAHS,SAACU,GAAD,MAAiB,CACrCgB,SAAUhB,EAAMgB,YAEoB,CAACP,UAA1BnB,CAAmCsB,G,iDCrF5CY,E,kDAGF,WAAY9C,GAAa,IAAD,8BACpB,cAAMA,IAEDsB,MAAQ,CACTjB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyC,UAAW,GACXC,QAAS,GACTC,OAAQ,IAGZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAbI,E,6DAiBxB,SAA0B2C,EAA0BC,GAC5CD,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,W,sBAIzC,SAASM,GACLrD,KAAKoD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,sBAGrD,SAASH,GACLA,EAAMI,iBACN,IAAMC,EAAa,CACfvD,YAAaH,KAAKoB,MAAMjB,YACxBD,kBAAmBF,KAAKoB,MAAMlB,kBAC9BE,YAAaJ,KAAKoB,MAAMhB,YACxByC,UAAW7C,KAAKoB,MAAMyB,UACtBC,QAAS9C,KAAKoB,MAAM0B,SAGxB9C,KAAKF,MAAMb,cAAcyE,EAAY1D,KAAKF,MAAMX,W,oBAGpD,WAAU,IACC4D,EAAU/C,KAAKoB,MAAf2B,OAEP,OACI,8BACI,qBAAK9C,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMgD,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAO5C,cAEzByD,YAAY,eACZL,KAAK,cACLC,MAAOxD,KAAKoB,MAAMjB,YAClB6C,SAAUhD,KAAKgD,WAElBD,EAAO5C,aACJ,qBAAKF,UAAU,mBAAf,SAAmC8C,EAAO5C,iBAGlD,sBAAKF,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAO7C,oBAEzB0D,YAAY,oBACZL,KAAK,oBACLC,MAAOxD,KAAKoB,MAAMlB,kBAClB8C,SAAUhD,KAAKgD,WAElBD,EAAO7C,mBACJ,qBAAKD,UAAU,mBAAf,SAAmC8C,EAAO7C,uBAGlD,sBAAKD,UAAU,aAAf,UACA,0BACIA,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAO3C,cAEzBwD,YAAY,sBACZL,KAAK,cACLC,MAAOxD,KAAKoB,MAAMhB,YAClB4C,SAAUhD,KAAKgD,WAGdD,EAAO3C,aACJ,qBAAKH,UAAU,mBAAf,SAAmC8C,EAAO3C,iBAGlD,4CACA,qBAAKH,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,+BACVsD,KAAK,YACLC,MAAOxD,KAAKoB,MAAMyB,UAClBG,SAAUhD,KAAKgD,aAGvB,oDACA,qBAAK/C,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,+BACVsD,KAAK,UACLC,MAAOxD,KAAKoB,MAAM0B,QAClBE,SAAUhD,KAAKgD,aAIvB,uBAAOvD,KAAK,SAASQ,UAAU,oD,GAzH1CO,IAAMC,WA8IhBC,eAJS,SAACU,GAAD,MAA6B,CACjD2B,OAAQ3B,EAAM2B,UAKd,CAAC9D,iBAFUyB,CAGbkC,G,wBCtJIiB,EAAe,CACjBC,aAAc,GACdC,YAAa,ICFjB,IAAMF,EAAe,GCArB,IAAMA,EAAe,CACjB3C,SAAU,GACVhC,QAAS,ICFb,IAAM2E,EAAe,CACjBvB,KAAM,GACND,YAAY,GAGV2B,EAAqB,SAACtE,GACxB,QAAOA,GCDIuE,4BAAgB,CAC3BlB,OHJW,WAAuD,IAAjC3B,EAAgC,uDAA1ByC,EAAcK,EAAY,uCACjE,OAAQA,EAAOzE,MACX,KAAKhB,EACD,OAAOyF,EAAOxE,QAClB,QACI,OAAO0B,IGAflC,QFFW,WAA0D,IAAlCkC,EAAiC,uDAAzByC,EAAcK,EAAW,uCACpE,OAAQA,EAAOzE,MACX,KAAKf,EACD,OAAO,2BACA0C,GADP,IAEIF,SAASgD,EAAOxE,UAExB,KAAKf,EACD,OAAO,2BACAyC,GADP,IAEIlC,QAASgF,EAAOxE,UAExB,KAAKd,EACD,OAAO,2BACFwC,GADL,IAEEF,SAAUE,EAAMF,SAASiD,QAAO,SAACjF,GAAD,OAAiBA,EAAQgB,oBAAsBgE,EAAOxE,aAE5F,QACI,OAAO0B,IEffgD,QJHW,WAA4D,IAApChD,EAAmC,uDAA3ByC,EAAcK,EAAa,uCACtE,OAAQA,EAAOzE,MACX,KAAKZ,EACD,OAAO,2BACAuC,GADP,IAEI0C,aAAcI,EAAOxE,UAE7B,KAAKZ,EACD,OAAO,2BACAsC,GADP,IAEI2C,YAAaG,EAAOxE,UAE5B,KAAKX,EACD,OAAO,2BACAqC,GADP,IAEI0C,aAAc1C,EAAM0C,aAAaK,QAAO,SAACJ,GAAD,OAAsBA,EAAYM,kBAAoBH,EAAOxE,aAE7G,QACI,OAAO0B,IIdfgB,SDAW,WAA8C,IAApChB,EAAmC,uDAA3ByC,EAAcK,EAAa,uCACxD,OAAQA,EAAOzE,MACX,KAAKT,EACD,OAAO,2BACAoC,GADP,IAEIiB,WAAY2B,EAAmBE,EAAOxE,SACtC4C,KAAM4B,EAAOxE,UAErB,QACI,OAAO0B,M,SEfbyC,GAAe,GACfS,GAAa,CAACC,KAGdC,GAAqBC,iCAoBZC,GAlBX/D,OAAOgE,UAAUC,UAAUC,SAAS,WAAaL,GACzCM,sBACJC,EACAlB,GACAmB,kBACIC,kBAAe,WAAf,EAAmBX,IACnBE,KAIAM,sBACJC,EACAlB,GACAmB,kBACIC,kBAAe,WAAf,EAAmBX,MCnBzBY,G,kDAGF,WAAYpF,GAAa,IAAD,8BACpB,cAAMA,IAEDsB,MAAQ,CACTvB,GAAI,GACJM,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyC,UAAW,GACXC,QAAS,GACTC,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAbI,E,6DAgBxB,SAA0B2C,GAElBA,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,SAHC,MAYlCG,EAAUhE,QANVW,EANkC,EAMlCA,GACAM,EAPkC,EAOlCA,YACAD,EARkC,EAQlCA,kBACAE,EATkC,EASlCA,YACAyC,EAVkC,EAUlCA,UACAC,EAXkC,EAWlCA,QAGJ9C,KAAKoD,SAAS,CACVvD,KACAM,cACAD,oBACAE,cACAyC,YACAC,c,+BAIR,WAAqB,IACVjD,EAAMG,KAAKF,MAAMqF,MAAMC,OAAvBvF,GACPG,KAAKF,MAAMuF,WAAWxF,EAAIG,KAAKF,MAAMX,W,sBAGzC,SAASkE,GACLrD,KAAKoD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,sBAGrD,SAASH,GACLA,EAAMI,iBACN,IAAM6B,EAAgB,CAClBzF,GAAIG,KAAKoB,MAAMvB,GACfM,YAAaH,KAAKoB,MAAMjB,YACxBD,kBAAmBF,KAAKoB,MAAMlB,kBAC9BE,YAAaJ,KAAKoB,MAAMhB,YACxByC,UAAW7C,KAAKoB,MAAMyB,UACtBC,QAAS9C,KAAKoB,MAAM0B,SAGxB9C,KAAKF,MAAMb,cAAcqG,EAAetF,KAAKF,MAAMX,W,oBAGvD,WAAU,IACC4D,EAAU/C,KAAKoB,MAAf2B,OAEP,OACI,qBAAK9C,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,iCACA,uBACA,uBAAMgD,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAO5C,cAEzByD,YAAY,eACZL,KAAK,cACLC,MAAOxD,KAAKoB,MAAMjB,YAClB6C,SAAUhD,KAAKgD,WAGfD,EAAO5C,aACH,qBAAKF,UAAU,wBAAf,SAAwC8C,EAAO5C,iBAI3D,qBAAKF,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,oCACV2D,YAAY,oBACZ2B,UAAQ,EACRhC,KAAK,oBACLC,MAAOxD,KAAKoB,MAAMlB,kBAClB8C,SAAUhD,KAAKgD,aAGvB,sBAAK/C,UAAU,aAAf,UACI,0BACIA,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAO3C,cAEzBwD,YAAY,sBACZL,KAAK,cACLC,MAAOxD,KAAKoB,MAAMhB,YAClB4C,SAAUhD,KAAKgD,WAGfD,EAAO3C,aACH,qBAAKH,UAAU,wBAAf,SAAwC8C,EAAO3C,iBAI3D,4CACA,qBAAKH,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,+BACVsD,KAAK,YACLC,MAAOxD,KAAKoB,MAAMyB,UAClBG,SAAUhD,KAAKgD,aAGvB,oDACA,qBAAK/C,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,+BACVsD,KAAK,UACLC,MAAOxD,KAAKoB,MAAM0B,QAClBE,SAAUhD,KAAKgD,aAIvB,uBAAOvD,KAAK,SAASQ,UAAU,yD,GA9InCO,IAAMC,WAoKnBC,gBALS,SAACU,GAAD,MAAiB,CACrClC,QAASkC,EAAMlC,QAAQA,QACvB6D,OAAQ3B,EAAM2B,UAGsB,CAACsC,WdlJf,SAACxF,EAAYV,GAAb,8CAA8B,WAAOC,GAAP,eAAAC,EAAA,+EAE9BC,IAAM+B,IAAN,uBAA0BxB,IAFI,OAE1CyB,EAF0C,OAGhDlC,EAAS,CACLK,KAAMd,EACNe,QAAS4B,EAAIC,OAL+B,gDAQhDpC,EAAQK,KAAK,cARmC,yDAA9B,uDckJ2BP,iBAAtCyB,CAAsDwE,ICpK/DM,G,mKAGF,SAAcC,EAAgBC,GAC1B1F,KAAKF,MAAM6F,kBAAkBF,EAAWC,K,oBAG5C,WAAU,IAEFE,EAAgBC,EADb9B,EAAe/D,KAAKF,MAApBiE,YAED+B,EAAiB,OAAOC,OAAO,IAErC,OAAQhC,EAAYiC,UAChB,KAAK,EACDH,EAAgB,uBAChBD,EAAiBE,EAAiB,OAClC,MACJ,KAAK,EACDD,EAAgB,wBAChBD,EAAiBE,EAAeG,MAAM,EAAG,IAAM,SAC/C,MACJ,KAAK,EACDJ,EAAgB,qBAChBD,EAAiBE,EAAiB,MAM1C,OACI,sBAAK7F,UAAU,qBAAf,UACI,sBAAKA,UAAS,mCAA8B4F,GAA5C,iBACS9B,EAAYM,gBADrB,gBACmDuB,KAEnD,sBAAK3F,UAAU,qBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4B8D,EAAYmC,UACxC,mBAAGjG,UAAU,2BAAb,SACK8D,EAAYoC,qBAEjB,sBAAKtG,GAAG,oBAAR,UACI,cAAC,IAAD,CAAMQ,GAAE,6BAAwB0D,EAAY7D,kBAApC,YAAyD6D,EAAYM,iBAAmBpE,UAAU,kBAA1G,2BAGA,wBAAQA,UAAU,iBAAiBJ,GAAG,sBAAsBS,QAASN,KAAKJ,cAAcW,KAAKP,KAAM+D,EAAY7D,kBAAmB6D,EAAYM,iBAA9I,iC,GA3CE7D,IAAMC,WAwDjBC,eAAQ,KAAM,CAACiF,kBCGG,SAACF,EAAkBC,GAAnB,8CAA4C,WAAOtG,GAAP,SAAAC,EAAA,0DACtEsB,OAAOC,QAAP,wCAAgD8E,EAAhD,6BADsE,gCAE/DpG,IAAMuB,OAAN,uBAA6B4E,EAA7B,YAA0CC,IAFqB,OAGrEtG,EAAS,CACLK,KAAKV,EACLW,QAAQgG,IALyD,kDAA5C,wDDHlBhF,CAAmC8E,IEZnCY,G,4JA7CX,WAAU,IAOFC,EAAWC,EAAiBC,EAL1BC,EADiBxG,KAAKF,MAArBgE,aACoB3C,KAAI,SAAC4C,GAAD,OAE3B,aADA,CACC,GAAD,CAAkCA,YAAaA,GAA7BA,EAAYlE,OAQlC,OAJAwG,EAAYG,EAAMrC,QAAO,SAACsC,GAAD,MAAiD,UAAlCA,EAAK3G,MAAMiE,YAAY2C,UAC/DJ,EAAkBE,EAAMrC,QAAO,SAACsC,GAAD,MAAiD,gBAAlCA,EAAK3G,MAAMiE,YAAY2C,UACrEH,EAAYC,EAAMrC,QAAO,SAACsC,GAAD,MAAiD,SAAlCA,EAAK3G,MAAMiE,YAAY2C,UAG3D,qBAAKzG,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,sCAAf,SACI,2CAGPoG,KAEL,sBAAKpG,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,iDAGPqG,KAEL,sBAAKrG,UAAU,WAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,0CAGPsG,c,GAvCH/F,IAAMC,WCItBkG,G,kDAGF,WAAY7G,GAAa,IAAD,8BACpB,cAAMA,IACDsB,MAAQ,CACT2B,OAAQ,IAHQ,E,qDAOxB,WAAqB,IACVlD,EAAMG,KAAKF,MAAMqF,MAAMC,OAAvBvF,GACPG,KAAKF,MAAM8G,WAAW/G,K,uCAG1B,SAA0BqD,GACtBlD,KAAKoD,SAASF,EAAUH,OAAS,CAACA,OAAQG,EAAUH,QAAU,M,oBAGlE,WAAU,IAIF8D,EAHGhH,EAAMG,KAAKF,MAAMqF,MAAMC,OAAvBvF,GACAiE,EAAgB9D,KAAKF,MAAMsE,QAA3BN,aAWP,OADA+C,EAP0B,SAAC9D,EAAae,GACpC,OAAQA,EAAagD,OAAS,EAAM/D,EAAOgE,gBACnC,qBAAK9G,UAAU,iCAAiC+G,KAAK,QAArD,SAA8DjE,EAAOgE,kBACrE,qBAAK9G,UAAU,+BAA+B+G,KAAK,QAAnD,6CACA,cAAC,GAAD,CAASlD,aAAcA,IAGpBmD,CATEjH,KAAKoB,MAAf2B,OASkCe,GAErC,sBAAK7D,UAAU,YAAf,UACI,cAAC,IAAD,CAAMI,GAAE,0BAAqBR,GAAMI,UAAU,uBAA7C,SACI,mBAAGA,UAAU,qBAAb,oCAEJ,uBACA,uBACC4G,S,GAvCUrG,IAAMC,WAwDlBC,gBALS,SAACU,GAAD,MAAiB,CACrCgD,QAAShD,EAAMgD,QACfrB,OAAQ3B,EAAM2B,UAGsB,CAAC6D,WF1Cf,SAACnB,GAAD,8CAAuB,WAAOrG,GAAP,eAAAC,EAAA,+EAEvBC,IAAM+B,IAAN,uBAA0BoE,IAFH,OAEnCnE,EAFmC,OAGzClC,EAAS,CACLK,KAAMZ,EACNa,QAAS4B,EAAIC,OALwB,gDAQzCnC,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAIwH,SAAS3F,OAVe,iEAAvB,wDE0CXb,CAAuCiG,ICxDhDQ,G,kDAGF,WAAYrH,GAAa,IAAD,0BAEbD,GADP,cAAMC,IACYA,MAAMqF,MAAMC,OAAvBvF,GAFa,OAIpB,EAAKuB,MAAQ,CACT8E,QAAS,GACTC,mBAAoB,GACpBO,OAAQ,GACRV,SAAU,EACVoB,QAAS,GACTlH,kBAAmBL,EACnBkD,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAdI,E,4CAiBxB,SAAS8C,GACLrD,KAAKoD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,uCAGrD,SAA0BN,GAClBA,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,W,sBAIzC,SAASM,GACLA,EAAMI,iBAEN,IAAM4D,EAAU,CACZnB,QAASlG,KAAKoB,MAAM8E,QACpBC,mBAAoBnG,KAAKoB,MAAM+E,mBAC/BO,OAAQ1G,KAAKoB,MAAMsF,OACnBV,SAAUhG,KAAKoB,MAAM4E,SACrBoB,QAASpH,KAAKoB,MAAMgG,SAExBpH,KAAKF,MAAMwH,eAAetH,KAAKoB,MAAMlB,kBAAmBmH,EAASrH,KAAKF,MAAMX,W,oBAGhF,WAAU,IACCU,EAAMG,KAAKF,MAAMqF,MAAMC,OAAvBvF,GACAkD,EAAU/C,KAAKoB,MAAf2B,OAEP,OACI,qBAAK9C,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMI,GAAE,wBAAmBR,GAAMI,UAAU,gBAA3C,mCAGA,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,mBAAb,yCACA,uBAAMgD,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOmD,UAEzB3C,KAAK,UACLK,YAAY,uBACZJ,MAAOxD,KAAKoB,MAAM8E,QAClBlD,SAAUhD,KAAKgD,WAGfD,EAAOmD,SACH,qBAAKjG,UAAU,wBAAf,SAAwC8C,EAAOmD,aAI3D,qBAAKjG,UAAU,aAAf,SACI,0BACIA,UAAU,oCACV2D,YAAY,sBACZL,KAAK,qBACLC,MAAOxD,KAAKoB,MAAM+E,mBAClBnD,SAAUhD,KAAKgD,aAGvB,0CACA,qBAAK/C,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,oCACVsD,KAAK,UACLC,MAAOxD,KAAKoB,MAAMgG,QAClBpE,SAAUhD,KAAKgD,aAGvB,qBAAK/C,UAAU,aAAf,SACI,yBACIA,UAAU,oCACVsD,KAAK,WACLC,MAAOxD,KAAKoB,MAAM4E,SAClBhD,SAAUhD,KAAKgD,SAJnB,UAMI,wBAAQQ,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIR,qBAAKvD,UAAU,aAAf,SACI,yBACIA,UAAU,+BACVsD,KAAK,SACLC,MAAOxD,KAAKoB,MAAMsF,OAClB1D,SAAUhD,KAAKgD,SAJnB,UAMI,wBAAQQ,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAGR,uBAAO/D,KAAK,SAASQ,UAAU,yD,GAzHlCO,IAAMC,WA2IpBC,gBAHS,SAACU,GAAD,MAA6B,CACjD2B,OAAQ3B,EAAM2B,UAEsB,CAACuE,eH/IX,SAAC7B,EAAmB1B,EAAkB5E,GAAtC,8CAAuD,WAAOC,GAAP,SAAAC,EAAA,+EAEvEC,IAAMC,KAAN,uBAA2BkG,GAAa1B,GAF+B,OAG7E5E,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KANgE,gDAU7EN,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAIwH,SAAS3F,OAZmD,iEAAvD,wDG+Ifb,CAA2CyG,IC3IpDI,G,kDAKF,WAAYzH,GAAa,IAAD,8BACpB,cAAMA,IAEDsB,MAAQ,CACTvB,GAAI,GACJwE,gBAAiB,GACjB6B,QAAS,GACTC,mBAAoB,GACpBO,OAAQ,GACRV,SAAU,GACVoB,QAAS,GACTlH,kBAAmB,GACnBsH,UAAW,GACXzE,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAhBI,E,qDAmBxB,WAAqB,IAAD,EACmBP,KAAKF,MAAMqF,MAAMC,OAA7CK,EADS,EACTA,UAAWC,EADF,EACEA,cAClB1F,KAAKF,MAAM2H,eAAehC,EAAWC,EAAe1F,KAAKF,MAAMX,W,uCAInE,SAA0B+D,GAClBA,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,SAFC,MAelCG,EAAUa,YATVlE,EANkC,EAMlCA,GACAwE,EAPkC,EAOlCA,gBACA6B,EARkC,EAQlCA,QACAC,EATkC,EASlCA,mBACAO,EAVkC,EAUlCA,OACAV,EAXkC,EAWlCA,SACAoB,EAZkC,EAYlCA,QACAlH,EAbkC,EAalCA,kBACAsH,EAdkC,EAclCA,UAGJxH,KAAKoD,SAAS,CACVvD,KACAwE,kBACA6B,UACAC,qBACAO,SACAV,WACAoB,UACAlH,oBACAsH,gB,sBAIR,SAASnE,GACLrD,KAAKoD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,sBAGrD,SAASH,GACLA,EAAMI,iBACN,IAAMiE,EAAqB,CACvB7H,GAAIG,KAAKoB,MAAMvB,GACfwE,gBAAiBrE,KAAKoB,MAAMiD,gBAC5B6B,QAASlG,KAAKoB,MAAM8E,QACpBC,mBAAoBnG,KAAKoB,MAAM+E,mBAC/BO,OAAQ1G,KAAKoB,MAAMsF,OACnBV,SAAUhG,KAAKoB,MAAM4E,SACrBoB,QAASpH,KAAKoB,MAAMgG,QACpBlH,kBAAmBF,KAAKoB,MAAMlB,kBAC9BsH,UAAWxH,KAAKoB,MAAMoG,WAE1BxH,KAAKF,MAAM6H,kBAAkB3H,KAAKoB,MAAMlB,kBAAmBF,KAAKoB,MAAMiD,gBAAiBqD,EAAoB1H,KAAKF,MAAMX,W,oBAG1H,WAAU,IACC4D,EAAU/C,KAAKoB,MAAf2B,OACP,OACI,qBAAK9C,UAAU,UAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMI,GAAE,wBAAmBL,KAAKoB,MAAMlB,mBAAqBD,UAAU,gBAArE,mCAGA,oBAAIA,UAAU,wBAAd,iCACA,oBAAGA,UAAU,mBAAb,2BAA+CD,KAAKoB,MAAMlB,kBAA1D,qBAA+FF,KAAKoB,MAAMiD,mBAC1G,uBAAMpB,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOmD,UAEzB3C,KAAK,UACLK,YAAY,uBACZJ,MAAOxD,KAAKoB,MAAM8E,QAClBlD,SAAUhD,KAAKgD,WAGfD,EAAOmD,SACH,qBAAKjG,UAAU,mBAAf,SAAmC8C,EAAOmD,aAItD,qBAAKjG,UAAU,aAAf,SACI,0BACIA,UAAU,oCACV2D,YAAY,sBACZL,KAAK,qBACLC,MAAOxD,KAAKoB,MAAM+E,mBAAqBnG,KAAKoB,MAAM+E,mBAAqB,GACvEnD,SAAUhD,KAAKgD,aAGvB,0CACA,qBAAK/C,UAAU,aAAf,SACI,uBACIR,KAAK,OACLQ,UAAU,oCACVsD,KAAK,UACLC,MAAOxD,KAAKoB,MAAMgG,QAAUpH,KAAKoB,MAAMgG,QAAU,GACjDpE,SAAUhD,KAAKgD,aAGvB,qBAAK/C,UAAU,aAAf,SACI,yBAAQA,UAAU,oCACVsD,KAAK,WACLC,MAAOxD,KAAKoB,MAAM4E,SAClBhD,SAAUhD,KAAKgD,SAHvB,UAKI,wBAAQQ,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,kBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBAIR,qBAAKvD,UAAU,aAAf,SACI,yBACIA,UAAU,oCACVsD,KAAK,SACLC,MAAOxD,KAAKoB,MAAMsF,OAClB1D,SAAUhD,KAAKgD,SAJnB,UAMI,wBAAQQ,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,uBAIR,uBAAO/D,KAAK,SAASQ,UAAU,mD,GA5J/BO,IAAMC,WAmLvBC,gBALS,SAACU,GAAD,MAAiB,CACrC2C,YAAa3C,EAAMgD,QAAQL,YAC3BhB,OAAQ3B,EAAM2B,UAGsB,CAAC0E,eJrJX,SAAChC,EAAmBC,EAAuBvG,GAA3C,8CAA4D,WAAOC,GAAP,eAAAC,EAAA,+EAEhEC,IAAM+B,IAAN,uBAA0BoE,EAA1B,YAAuCC,IAFyB,OAE5EpE,EAF4E,OAGlFlC,EAAS,CACLK,KAAMX,EACNY,QAAS4B,EAAIC,OALiE,gDAQlFpC,EAAQK,KAAK,cARqE,yDAA5D,uDIqJ2BmI,kBJzIxB,SAAClC,EAAmBC,EAAuB3B,EAAkB5E,GAA7D,8CAA8E,WAAOC,GAAP,SAAAC,EAAA,+EAEjGC,IAAMsI,MAAN,uBAA4BnC,EAA5B,YAAyCC,GAAiB3B,GAFuC,OAGvG5E,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAN0F,gDASvGN,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAIwH,SAAS3F,OAX6E,yDAA9E,wDIyIlBb,CAA8D6G,ICrLvEM,G,uKAEF,WACQ7H,KAAKF,MAAMsC,SAASC,YACpBrC,KAAKF,MAAMX,QAAQK,KAAK,gB,oBAGhC,WACI,OACI,qBAAKS,UAAU,UAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,qCACA,mBAAGA,UAAU,OAAb,2EAGA,uBACA,cAAC,IAAD,CAAMA,UAAU,yCACVI,GAAG,YADT,qBAGA,cAAC,IAAD,CAAMJ,UAAU,sCACVI,GAAG,SADT,kC,GAtBVG,IAAMC,WAwCbC,gBAHS,SAACU,GAAD,MAAiB,CACrCgB,SAAUhB,EAAMgB,YAEL1B,CAAyBmH,ICvClCC,G,kDAGF,WAAYhI,GAAa,IAAD,8BACpB,cAAMA,IAEDsB,MAAQ,CACT2G,SAAU,GACVvF,SAAU,GACVwF,SAAU,GACVC,gBAAiB,GACjBlF,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAXI,E,qDAcxB,WACQP,KAAKF,MAAMsC,SAASC,YACpBrC,KAAKF,MAAMX,QAAQK,KAAK,gB,uCAIhC,SAA0B0D,GAClBA,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,W,sBAIzC,SAASmF,GACLA,EAAEzE,iBACF,IAAM0E,EAAU,CACZJ,SAAU/H,KAAKoB,MAAM2G,SACrBvF,SAAUxC,KAAKoB,MAAMoB,SACrBwF,SAAUhI,KAAKoB,MAAM4G,SACrBC,gBAAiBjI,KAAKoB,MAAM6G,iBAGhCjI,KAAKF,MAAMsI,cAAcD,EAASnI,KAAKF,MAAMX,W,sBAGjD,SAAS+I,GACLlI,KAAKoD,SAAL,eAAgB8E,EAAE5E,OAAOC,KAAO2E,EAAE5E,OAAOE,U,oBAG7C,WAAU,IACCT,EAAU/C,KAAKoB,MAAf2B,OACP,OACI,qBAAK9C,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,qBACA,mBAAGA,UAAU,mBAAb,iCACA,uBAAMgD,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOP,WAEzBoB,YAAY,YACZL,KAAK,WACLC,MAAOxD,KAAKoB,MAAMoB,SAClBQ,SAAUhD,KAAKgD,WAElBD,EAAOP,UACJ,qBAAKvC,UAAU,mBAAf,SAAmC8C,EAAOP,cAGlD,sBAAKvC,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOgF,WAEzBnE,YAAY,2BACZL,KAAK,WACLC,MAAOxD,KAAKoB,MAAM2G,SAClB/E,SAAUhD,KAAKgD,WAElBD,EAAOgF,UACJ,qBAAK9H,UAAU,mBAAf,SAAmC8C,EAAOgF,cAGlD,sBAAK9H,UAAU,aAAf,UACI,uBACIR,KAAK,WACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOiF,WAEzBpE,YAAY,WACZL,KAAK,WACLC,MAAOxD,KAAKoB,MAAM4G,SAClBhF,SAAUhD,KAAKgD,WAElBD,EAAOiF,UACJ,qBAAK/H,UAAU,mBAAf,SAAmC8C,EAAOiF,cAGlD,sBAAK/H,UAAU,aAAf,UACI,uBACIR,KAAK,WACLQ,UAAW0D,IAAW,+BAAgC,CAClD,aAAcZ,EAAOkF,kBAEzBrE,YAAY,mBACZL,KAAK,kBACLC,MAAOxD,KAAKoB,MAAM6G,gBAClBjF,SAAUhD,KAAKgD,WAElBD,EAAOkF,iBACJ,qBAAKhI,UAAU,mBAAf,SACK8C,EAAOkF,qBAIpB,uBAAOxI,KAAK,SAASQ,UAAU,sD,GArHxCO,IAAMC,WAyIdC,gBAJS,SAACU,GAAD,MAAkB,CACtC2B,OAAQ3B,EAAM2B,OACdX,SAAUhB,EAAMgB,YAIhB,CAACgG,cjB5IwB,SAACD,EAAchJ,GAAf,8CAAgC,WAAOC,GAAP,SAAAC,EAAA,+EAE/CC,IAAMC,KAAK,sBAAuB4I,GAFa,OAGrDhJ,EAAQK,KAAK,UACbJ,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KANwC,gDASrDN,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAIwH,SAAS3F,OAX2B,yDAAhC,wDiB0Idb,CAGboH,IC5IIO,G,kDAGF,WAAYvI,GAAa,IAAD,8BACpB,cAAMA,IAEDsB,MAAQ,CACT2G,SAAU,GACVC,SAAU,GACVjF,OAAQ,IAEZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBATI,E,qDAYxB,WACQP,KAAKF,MAAMsC,SAASC,YACpBrC,KAAKF,MAAMX,QAAQK,KAAK,gB,uCAIhC,SAA0B0D,GAClBA,EAAUd,SAASC,YACnBrC,KAAKF,MAAMX,QAAQK,KAAK,cAGxB0D,EAAUH,QACV/C,KAAKoD,SAAS,CAACL,OAAQG,EAAUH,W,sBAIzC,SAASM,GACLA,EAAMI,iBACN,IAAM6E,EAAe,CACjBP,SAAU/H,KAAKoB,MAAM2G,SACrBC,SAAUhI,KAAKoB,MAAM4G,UAEzBhI,KAAKF,MAAMyI,MAAMD,K,sBAGrB,SAASjF,GACLrD,KAAKoD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,oBAGrD,WAAU,IACCT,EAAU/C,KAAKoB,MAAf2B,OACP,OACI,qBAAK9C,UAAU,QAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,oBACA,uBAAMgD,SAAUjD,KAAKiD,SAArB,UACI,sBAAKhD,UAAU,aAAf,UACI,uBACIR,KAAK,OACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOgF,WAEzBnE,YAAY,gBACZL,KAAK,WACLC,MAAOxD,KAAKoB,MAAM2G,SAClB/E,SAAUhD,KAAKgD,WAElBD,EAAOgF,UACJ,qBAAK9H,UAAU,mBAAf,SAAmC8C,EAAOgF,cAGlD,sBAAK9H,UAAU,aAAf,UACI,uBACIR,KAAK,WACLQ,UAAW0D,IAAW,oCAAqC,CACvD,aAAcZ,EAAOiF,WAEzBpE,YAAY,WACZL,KAAK,WACLC,MAAOxD,KAAKoB,MAAM4G,SAClBhF,SAAUhD,KAAKgD,WAElBD,EAAOiF,UACJ,qBAAK/H,UAAU,mBAAf,SAAmC8C,EAAOiF,cAGlD,uBAAOvI,KAAK,SAASQ,UAAU,sD,GAnF3CO,IAAMC,WAwGXC,gBALS,SAACU,GAAD,MAAiB,CACrCgB,SAAUhB,EAAMgB,SAChBW,OAAQ3B,EAAM2B,UAGsB,CAACwF,MlBzFpB,SAACD,GAAD,8CAAuB,WAAOlJ,GAAP,mBAAAC,EAAA,+EAElBC,IAAMC,KAAK,mBAAoB+I,GAFb,OAE9BhH,EAF8B,OAG7BG,EAASH,EAAIC,KAAbE,MACPK,aAAa0G,QAAQ,YAAa/G,GAClCD,EAAYC,GACNgH,EAAeC,YAAWjH,GAEhCrC,EAAS,CACLK,KAAMT,EACNU,QAAS+I,IAVuB,kDAapCrJ,EAAS,CACLK,KAAMhB,EACNiB,QAAS,KAAEwH,SAAS3F,OAfY,0DAAvB,wDkByFNb,CAAkC2H,I,SCnFlC3H,gBAJS,SAACU,GAAD,MAAgB,CACpCgB,SAAUhB,EAAMgB,YAGL1B,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAGkI,UAAsBvG,EAAzB,EAAyBA,SAAawG,EAAtC,gDACjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAA/I,GAAK,OACe,IAAxBsC,EAASC,WACL,cAAC5B,EAAD,eAAeX,IAEf,cAAC,IAAD,CAAUO,GAAG,kBCUvByI,GAAWhH,aAAaiH,UAE9B,GAAID,GAAU,CACVtH,EAAYsH,IACZ,IAAME,GAAyBN,YAAWI,IAC1CpE,GAAMtF,SAAS,CACXK,KAAMT,EACNU,QAASsJ,KAGb,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAkBI,IAAMH,KACxBvE,GAAMtF,SAASyC,KACflB,OAAOsB,SAASC,KAAO,KAiChBmH,OA7Bf,WACI,OACI,cAAC,IAAD,CAAU3E,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,sBAAKzE,UAAU,MAAf,UACI,cAAC,EAAD,IAIA,cAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,IAAIZ,UAAWa,KACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYZ,UAAWb,KACzC,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAASZ,UAAWN,KAItC,eAAC,IAAD,WACI,cAAC,GAAD,CAAeiB,OAAK,EAACC,KAAK,aAAaZ,UAAW3H,IAClD,cAAC,GAAD,CAAesI,OAAK,EAACC,KAAK,cAAcZ,UAAW/F,IACnD,cAAC,GAAD,CAAe0G,OAAK,EAACC,KAAK,qBAAqBZ,UAAWzD,KAC1D,cAAC,GAAD,CAAeoE,OAAK,EAACC,KAAK,oBAAoBZ,UAAWhC,KACzD,cAAC,GAAD,CAAe2C,OAAK,EAACC,KAAK,sBAAsBZ,UAAWxB,KAC3D,cAAC,GAAD,CAAemC,OAAK,EAACC,KAAK,+CAA+CZ,UAAWpB,gBC/C7FkC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASrB,OACL,cAAC,GAAD,IACFsB,SAASC,eAAe,SAM1BX,O","file":"static/js/main.5b4557ff.chunk.js","sourcesContent":["// Section for Project\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Section for Backlog Actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\r\nimport {DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS} from \"./types\";\r\n\r\nexport const createProject = (project: any, history: any) => async (dispatch: any) => {\r\n    try {\r\n        const res = await axios.post(\"/api/project\", project);\r\n        history.push(\"/dashboard\"); // redirect to dashboard\r\n    } catch (err: any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjects = () => async (dispatch: any) => {\r\n    const res = await axios.get(\"/api/project/all\");\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const getProject = (id: string, history: any) => async (dispatch: any) => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    } catch (err: any) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const deleteProject = (id: string) => async (dispatch: any) => {\r\n    if (window.confirm(\"Are you sure ? This will delete the project and all of its related data.\")) {\r\n        await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends React.Component<any, any> {\r\n    public static propTypes: any;\r\n\r\n    onDeleteClick = (id: any) => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    render() {\r\n        const {project} = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`} className=\"text-decoration-none\">\r\n                                    <li className=\"list-group-item board \">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`} className=\"text-decoration-none\">\r\n                                    <li className=\"list-group-item update \">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item delete \" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {deleteProject})(ProjectItem);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info text-white\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProjectButton;","import React from 'react';\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport ProjectButton from \"./project/ProjectButton\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProjects} from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    // noinspection BadExpressionStatementJS\r\n    render() {\r\n        const {projects} = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br/>\r\n                            <ProjectButton/>\r\n                            <br/>\r\n                            <hr/>\r\n                            {\r\n                                projects.map((project: any) => (\r\n                                    <ProjectItem key={project.id} project={project}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    project: state.project,\r\n})\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from 'axios';\r\n\r\nconst setJWTToken = (token:any) => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport setJWTToken from \"../security-utils/jwt-token\";\r\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createNewUser = (newUser: any, history: any) => async (dispatch: any) => {\r\n    try {\r\n        await axios.post('/api/users/register', newUser);\r\n        history.push('/login');\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err: any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (loginRequest: any) => async (dispatch: any) => {\r\n    try {\r\n        const res = await axios.post('/api/users/login', loginRequest);\r\n        const {token} = res.data;\r\n        localStorage.setItem('jwt_token', token);\r\n        setJWTToken(token);\r\n        const decodedToken = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decodedToken\r\n        });\r\n    } catch (e: any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: e.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    localStorage.removeItem(\"jwt_token\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n}","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../actions/securityActions';\r\n\r\nclass Header extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n        const {validToken, user} = this.props.security;\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"nav-items-end\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\"\r\n                                  to=\"/dashboard\"><i className=\"fas fa-user-circle\"/>{` ${user.fullName}`}\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\"\r\n                                  to=\"/logout\" onClick={this.logout.bind(this)}>Logout\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <div className=\"nav-items-end\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\"\r\n                                  to=\"/register\">Sign up\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\"\r\n                                  to=\"/login\">Login\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    security: state.security\r\n});\r\nexport default connect(mapStateToProps, {logout})(Header);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nclass AddProject extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // lifecycle hooks\r\n    componentWillReceiveProps(nextProps: Readonly<any>, nextContext: any) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(event: any) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    onSubmit(event: any) {\r\n        event.preventDefault(); // prevent page reloading on form submission\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate\r\n        };\r\n\r\n        this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr/>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                                \"is-invalid\": errors.projectIdentifier\r\n                                            })}\r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classNames(\"form-control form-control-lg mb-4\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n\r\n                                    />\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"startDate\"\r\n                                            value={this.state.startDate}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"endDate\"\r\n                                            value={this.state.endDate}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn-lg w-100 btn-primary mt-4\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state: { errors: []; }) => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createProject}\r\n)(AddProject);","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projectTasks: [],\r\n    projectTask: {}\r\n}\r\n\r\nexport default function backlogReducer(state = initialState, action: any) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                projectTasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTask: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTasks: state.projectTasks.filter((projectTask: any) => projectTask.projectSequence !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function errorReducer(state=initialState, action:any) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_PROJECT, GET_PROJECTS, DELETE_PROJECT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function projectReducer(state = initialState, action:any){\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects:action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n              ...state,\r\n              projects: state.projects.filter((project:any) => project.projectIdentifier !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst isActionPayloadSet = (payload: any) => {\r\n    return payload ? true : false;\r\n}\r\n\r\nexport default function (state = initialState, action: any) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: isActionPayloadSet(action.payload),\r\n                user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from './securityReducer';\r\n\r\n// main store reducer\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    project: projectReducer,\r\n    backlog:backlogReducer,\r\n    security:securityReducer\r\n});","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store:any;\r\nconst reactReduxDevTools = composeWithDevTools(); // redux extensions available only for Chrome\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            reactReduxDevTools\r\n            )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware))\r\n    );\r\n}\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nclass UpdateProject extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            startDate,\r\n            endDate,\r\n        } = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            startDate,\r\n            endDate\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(event: any) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    onSubmit(event: any) {\r\n        event.preventDefault();\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate\r\n        };\r\n\r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project Info</h5>\r\n                            <hr/>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                            \"is-invalid\": errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.projectName && (\r\n                                            <div className=\"invalid-feedback mb-2\">{errors.projectName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control form-control-lg mb-2\"\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        disabled\r\n                                        name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.description && (\r\n                                            <div className=\"invalid-feedback mb-2\">{errors.description}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"startDate\"\r\n                                        value={this.state.startDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"endDate\"\r\n                                        value={this.state.endDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn w-100 btn-primary btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject})(UpdateProject);","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectTask extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    onDeleteClick(backlogId: any, projectTaskId: any) {\r\n        this.props.deleteProjectTask(backlogId, projectTaskId);\r\n    }\r\n\r\n    render() {\r\n        const {projectTask} = this.props;\r\n        let priorityString, priorityClass;\r\n        const prioritySpaces = '\\xa0'.repeat(26); // prepend 26 white spaces to the string\r\n\r\n        switch (projectTask.priority) {\r\n            case 1:\r\n                priorityClass = \"bg-danger text-light\";\r\n                priorityString = prioritySpaces + \"HIGH\";\r\n                break;\r\n            case 2:\r\n                priorityClass = \"bg-warning text-light\";\r\n                priorityString = prioritySpaces.slice(0, 20) + \"MEDIUM\";\r\n                break;\r\n            case 3:\r\n                priorityClass = \"bg-info text-light\";\r\n                priorityString = prioritySpaces + \"LOW\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {projectTask.projectSequence} -- Priority:{priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {projectTask.acceptanceCriteria}\r\n                    </p>\r\n                    <div id=\"buttons-container\">\r\n                        <Link to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`} className=\"btn btn-primary\">\r\n                            View / Update\r\n                        </Link>\r\n                        <button className=\"btn btn-danger\" id=\"delete-buttons-size\" onClick={this.onDeleteClick.bind(this, projectTask.projectIdentifier, projectTask.projectSequence)}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, {deleteProjectTask})(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\";\r\n\r\nexport const addProjectTask = (backlogId: string, projectTask: any, history: any) => async (dispatch: any) => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlogId}`, projectTask);\r\n        history.push(`/projectBoard/${backlogId}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n\r\n        });\r\n    } catch (err: any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n    ;\r\n};\r\n\r\nexport const getBacklog = (backlogId: string) => async (dispatch: any) => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlogId}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err: any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n    ;\r\n};\r\n\r\nexport const getProjectTask = (backlogId: string, projectTaskId: string, history: any) => async (dispatch: any) => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlogId}/${projectTaskId}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlogId: string, projectTaskId: string, projectTask: any, history: any) => async (dispatch: any) => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlogId}/${projectTaskId}`, projectTask);\r\n        history.push(`/projectBoard/${backlogId}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err:any) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlogId:string, projectTaskId:string) => async (dispatch:any) => {\r\n    if(window.confirm(`You are deleting project task ${projectTaskId}, this cannot be undone.`)){\r\n        await axios.delete(`/api/backlog/${backlogId}/${projectTaskId}`);\r\n        dispatch({\r\n            type:DELETE_PROJECT_TASK,\r\n            payload:projectTaskId\r\n        });\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport ProjectTask from './project-tasks/ProjectTask';\r\n\r\nclass Backlog extends React.Component<any, any> {\r\n\r\n    render() {\r\n        const {projectTasks} = this.props;\r\n        const tasks = projectTasks.map((projectTask: any) =>\r\n            // @ts-ignore\r\n            <ProjectTask key={projectTask.id} projectTask={projectTask}/>\r\n        );\r\n\r\n        let toDoItems, inProgressItems, doneItems = [];\r\n        toDoItems = tasks.filter((task: any) => task.props.projectTask.status === \"TO_DO\");\r\n        inProgressItems = tasks.filter((task: any) => task.props.projectTask.status === \"IN_PROGRESS\");\r\n        doneItems = tasks.filter((task: any) => task.props.projectTask.status === \"DONE\");\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {toDoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgressItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getBacklog} from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n        this.setState(nextProps.errors ? {errors: nextProps.errors} : {});\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {projectTasks} = this.props.backlog;\r\n        const {errors} = this.state;\r\n        let boardContent;\r\n        const boardErrorHandler = (errors: any, projectTasks: any) => {\r\n            return (projectTasks.length < 1) ? (errors.projectNotFound) ?\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectNotFound}</div> :\r\n                    <div className=\"alert alert-info text-center\" role=\"alert\">No Project Tasks on this board.</div> :\r\n                    <Backlog projectTasks={projectTasks}/>\r\n        }\r\n\r\n        boardContent = boardErrorHandler(errors, projectTasks);\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br/>\r\n                <hr/>\r\n                {boardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport {addProjectTask} from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddProjectTask extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const {id} = this.props.match.params;\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(event: any) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<any>) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(event: any) {\r\n        event.preventDefault();\r\n\r\n        const newTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        };\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control form-control-lg mb-2\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback mb-1\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className=\"form-control form-control-lg mb-2\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg mb-2\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg mb-2\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4 w-100\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state: { errors: []; }) => ({\r\n    errors: state.errors\r\n})\r\nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UpdateProjectTask extends React.Component<any, any> {\r\n\r\n    public static propTypes = {};\r\n\r\n    // initial component state\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            createdAt: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {backlogId, projectTaskId} = this.props.match.params;\r\n        this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\r\n    }\r\n\r\n    // state after component mount\r\n    componentWillReceiveProps(nextProps: any) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt\r\n        } = nextProps.projectTask;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt\r\n        });\r\n    }\r\n\r\n    onChange(event: any) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    onSubmit(event: any) {\r\n        event.preventDefault();\r\n        const updatedProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            createdAt: this.state.createdAt\r\n        };\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updatedProjectTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier}|Project Task ID: {this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className=\"form-control mb-2 form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria ? this.state.acceptanceCriteria : \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control mb-2 form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate ? this.state.dueDate : \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control mb-2 form-control-lg\"\r\n                                            name=\"priority\"\r\n                                            value={this.state.priority}\r\n                                            onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control mb-2 form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    projectTask: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    projectTask: state.backlog.projectTask,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask);","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <hr/>\r\n                                <Link className=\"btn w-100 btn-lg mb-2 btn-primary mr-2\"\r\n                                      to=\"/register\">Sign up\r\n                                </Link>\r\n                                <Link className=\"btn w-100 btn-lg btn-secondary mr-2\"\r\n                                      to=\"/login\">Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state: any) => ({\r\n    security: state.security\r\n})\r\nexport default connect(mapStateToProps)(Landing);","import React, {Component} from \"react\";\r\nimport {createNewUser} from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Register extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e: any) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    onChange(e: any) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Full Name\"\r\n                                        name=\"fullName\"\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.fullName && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address (Username)\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classNames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.confirmPassword\r\n                                        })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.confirmPassword}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info w-100 btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state: any ) => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {createNewUser}\r\n)(Register);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {login} from \"../../actions/securityActions\";\r\n\r\nclass Login extends React.Component<any, any> {\r\n    public static propTypes = {};\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(event: any) {\r\n        event.preventDefault();\r\n        const loginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.login(loginRequest);\r\n    }\r\n\r\n    onChange(event: any) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classNames(\"form-control mb-2 form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block w-100 mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @ts-ignore\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route\r\n        {...otherProps}\r\n        render={props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state:any) => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AddProject from './components/project/AddProject';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/project/UpdateProject';\nimport ProjectBoard from './components/project-board/ProjectBoard';\nimport ProjectTask from './components/project-board/project-tasks/ProjectTask';\nimport AddProjectTask from './components/project-board/project-tasks/AddProjectTask';\nimport UpdateProjectTask from './components/project-board/project-tasks/UpdateProjectTask';\nimport LandingPage from './components/Landing';\nimport Register from './components/user-management/Register';\nimport Login from './components/user-management/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from '../src/security-utils/jwt-token';\nimport {SET_CURRENT_USER} from './actions/types';\nimport {logout} from './actions/securityActions';\nimport SecuredRoute from '../src/security-utils/SecuredRoute';\n\nconst jwtToken = localStorage.jwt_token;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwt_token: any = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwt_token\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwt_token.exp < currentTime) {\n        store.dispatch(logout());\n        window.location.href = \"/\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className='App'>\n                    <Header/>\n                    {\n                        // Public Routes\n                    }\n                    <Route exact path=\"/\" component={LandingPage}/>\n                    <Route exact path=\"/register\" component={Register}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    {\n                        // Private routes\n                    }\n                    <Switch>\n                        <SecuredRoute  exact path='/dashboard' component={Dashboard}/>\n                        <SecuredRoute  exact path='/addProject' component={AddProject}/>\n                        <SecuredRoute  exact path='/updateProject/:id' component={UpdateProject}/>\n                        <SecuredRoute  exact path='/projectBoard/:id' component={ProjectBoard}/>\n                        <SecuredRoute  exact path='/addProjectTask/:id' component={AddProjectTask}/>\n                        <SecuredRoute  exact path='/updateProjectTask/:backlogId/:projectTaskId' component={UpdateProjectTask}/>\n                    </Switch>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}